os: linux
dist: bionic
sudo: required
language: c

env:
    global:
        - secure: "jV9WdgzDemtQaw83SwFKbDfc1/5BPE4DGQGrrwHRIHCqw9NzCULGEi9CL41hWIBv9zHjX/zpAJzqKQUsZusEjsmud4pg5Gu6I2OA3KLFurG11+Bipcs9f4MUnLwa4dhIHrIColYy4ul4QYiCGUaNr12Idj+mELUzo79Sc3a/k3MOq+J01QvNKVrpUCn+MZMR1gHepZSMqxJw5/QE+6crN7WDOqv3D6ZlYQvha2ZDKzJjBQ9nVe4NNCrK8qrwWKkSwi8cPEPUCEQogn7AO4OO4M4crJ6PdhNo+I2N/u7PIgA9UoyV4gpJSJaHI3DSOuXMp4U48g9s2eccbuJGFF3deJ5SWUYm4Y2ZPfK/PN5+dYR7w3vgu8IUVW8A/ac+Bez0ABiuSVJDCqCwu2KtjD3sL910aHmfXsZS09Vhws+xLkWpSev7v1TKCPQdD2CbmnEIkJMQ7NJdRrpn79O/F0nzYmP4XylfG3M2AuHsmVF95ZtgAMkAir/0ou789xNIsknl79SyFQRgeLdBbsjVrDPfAliTmNOH1tLLX+n4ezy6sZQFSPXL+HoJ843sSv+1ZsFjBPc5I6h7qhXTpV26xl/Fuy9SNZFT+e5khd7N3QKD6YaYND/2mJ2LfH3FBtjRpl5FAAFIJRsgehX+3MREy3iYR3cx4jIyrmNQt1f2sOaDsA8="

addons:
    apt:
        packages:
            - build-essential
            - bmake
            - lsb-release
            - curl
            - ca-certificates
            - bzip2
            - m4
            - libcap-dev
            - libseccomp-dev
            - gnupg2
    coverity_scan:
        project:
            name: "NVIDIA/libnvidia-container"
            version: "1.2.0"
            description: "NVIDIA container runtime library"
        notification_email: kklues@nvidia.com
        build_command_prepend: "make clean"
        build_command: "make"
        branch_pattern: master

install:
    - sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    - echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" | sudo tee /etc/apt/sources.list.d/cuda.list
    - sudo apt-key adv --fetch-keys https://apt.llvm.org/llvm-snapshot.gpg.key
    - echo "deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main" | sudo tee /etc/apt/sources.list.d/clang.list
    - sudo apt-get update
    - sudo apt-get install -y --no-install-recommends cuda-misc-headers-10-0 cuda-nvml-dev-10-0 clang-10 clang-tools-10 llvm-10-dev

jobs:
    include:
        - stage: build
          script:
              - CC=gcc make
        - stage: build
          script:
              - CC=clang-10 make
        - stage: scan
          before_script:
              - sudo apt-get install -y --no-install-recommends cppcheck
          script:
              - cppcheck --std=posix --inconclusive --enable=all src/*.c src/*.h
        - stage: scan
          script:
              - scan-build-10 make
