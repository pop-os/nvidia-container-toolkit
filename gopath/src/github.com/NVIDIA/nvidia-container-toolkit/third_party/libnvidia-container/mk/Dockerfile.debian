ARG BASEIMAGE
FROM ${BASEIMAGE}

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
        apt-utils \
        bmake \
        build-essential \
        bzip2 \
        ca-certificates \
        curl \
        devscripts \
        dh-make \
        fakeroot \
        git \
        gnupg2 \
        libcap-dev \
        libelf-dev \
        libseccomp-dev \
        lintian \
        lsb-release \
        m4 \
        pkg-config \
        xz-utils && \
    rm -rf /var/lib/apt/lists/*

ARG OS_ARCH
ARG GOLANG_VERSION
ENV OS_ARCH=${OS_ARCH}
RUN OS_ARCH=${OS_ARCH/x86_64/amd64} && OS_ARCH=${OS_ARCH/aarch64/arm64} && \
    curl https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-${OS_ARCH}.tar.gz \
    | tar -C /usr/local -xz
ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

ENV GPG_TTY /dev/console

WORKDIR /tmp/libnvidia-container
COPY . .

ARG WITH_NVCGO=no
ARG WITH_LIBELF=no
ARG WITH_TIRPC=no
ARG WITH_SECCOMP=yes
ENV WITH_NVCGO=${WITH_NVCGO}
ENV WITH_LIBELF=${WITH_LIBELF}
ENV WITH_TIRPC=${WITH_TIRPC}
ENV WITH_SECCOMP=${WITH_SECCOMP}

ARG REVISION
ENV REVISION=${REVISION}
RUN make distclean && make -j"$(nproc)"

# Use the revision as the package version for the time being
ENV PKG_NAME libnvidia-container
ENV PKG_VERS ${REVISION}
ENV DIST_DIR=/tmp/${PKG_NAME}-${PKG_VERS}
RUN mkdir -p $DIST_DIR /dist

CMD bash -c " \
        export DISTRIB=$(lsb_release -c -s); \
        export SECTION="" \
        make dist; \
        make deb; \
        mv /tmp/${PKG_NAME}-${PKG_VERS}/*.deb /dist; \
     "
